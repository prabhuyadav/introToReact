JSX - format of writing direct html code in to js files using React. React uses a advanced compiler named Babel which will recognie this html code and compiles it into it's javascript equivalent
as this is a js file that our browser will finally read, so that our browser can understand

We can use that latest syntax import instead of assigning as variables to import react modules.

Inside the render function it can only take one html element so if we want a h1 and a paragraph then
we simply enclose it in a div which will be considered as a single element and this div will be
created inside our root div with id root which we gave as second arg to the render fn.

Next....

we can use curly braces {} to include javascript code inside our html code used in the render function.
so this is the format in JSX file.

in index.html when we are including the script we need to change the type to JSX instead of javascript to not get some non blocking errors.

Adding attributes to the html in jsx code i.e index.js  is different that adding normal html attr.

we need to add JSX attr which are camel cased version of corresponding html attr in most cases and this is because since this will be compiled and converted to javascript instead of html we need 
to add these JSX attrs so that DOM can recognize these names.for example className is the actual dom property that we set when we set a class for an element in the html so we set that property directly here
which itself is the JSX attr name and it will be like that in most cases.

Adding inline styles. becomes useful when we wanna update style dynamically. so in JSX we need to give a js object with css properties as keys and the corresponing values as strings.
similar to html attr being camelCased version in JSX we need to camelCase the css properties also instead of kebab case. for example font-size is fontSize in jsx.

React components.

so we can create seperate jsx files to create components and use them. as per convention we keep the extension of the index.js file to js only instead of making that to jsx.
check the airbnb react style guide github repo for conventions and best practices.

now we create a function that returns the html element and we export that file. we import the file in index.js and use it as <Heading />
now when we write the function name inside the tag like that bts react will call this function and set the returned element in the dom.
since we don't want to add any new content inside this Heading we can self close it . as per convention we give a space before the closing tag and the name.
for all the component files we name them with jsx extensions

By convention all the component files have PascalCase i.e start of every word in the name will be capitalized.

ES6 import,export modules lecture understood.

for a file there can only be a single default export. if we want to export other things then we can dom
export default f;
export {x,y};

so here f is the default export and x,y are non default.

so when we try to import these in to another file by default the default export is imported and we can give it any name we want when importing.
import c from ...
so here this c is actually the f coming from the other file we are importing from.
to import non default values
import c, {x,y} from ...
so for non default we import the same way we export them but when importing the names should be matched unlike for the default export/import case

import * as o from ...
we can import all the exports like this now o will be am object containing the exports as their properties
f will be under a property name default so o.default will be f and the other two non default exports will be at o.x, o.y

